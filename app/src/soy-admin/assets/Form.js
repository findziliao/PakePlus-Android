import{c as g,j as w,a as j,B as I,d as v,u as _,n as x,r as M,A as b,h as O,dN as S,dO as y}from"./index.js";const B=g("form",[w("inline",`
 width: 100%;
 display: inline-flex;
 align-items: flex-start;
 align-content: space-around;
 `,[g("form-item",{width:"auto",marginRight:"18px"},[j("&:last-child",{marginRight:0})])])]),P=I("n-form"),C=I("n-form-item-insts");var L=globalThis&&globalThis.__awaiter||function(t,m,o,s){function u(r){return r instanceof o?r:new o(function(a){a(r)})}return new(o||(o=Promise))(function(r,a){function h(n){try{i(s.next(n))}catch(c){a(c)}}function e(n){try{i(s.throw(n))}catch(c){a(c)}}function i(n){n.done?r(n.value):u(n.value).then(h,e)}i((s=s.apply(t,m||[])).next())})};const R=Object.assign(Object.assign({},x.props),{inline:Boolean,labelWidth:[Number,String],labelAlign:String,labelPlacement:{type:String,default:"top"},model:{type:Object,default:()=>{}},rules:Object,disabled:Boolean,size:String,showRequireMark:{type:Boolean,default:void 0},requireMarkPlacement:String,showFeedback:{type:Boolean,default:!0},onSubmit:{type:Function,default:t=>{t.preventDefault()}},showLabel:{type:Boolean,default:void 0},validateMessages:Object}),V=v({name:"Form",props:R,setup(t){const{mergedClsPrefixRef:m}=_(t);x("Form","-form",B,S,t,m);const o={},s=M(void 0),u=e=>{const i=s.value;(i===void 0||e>=i)&&(s.value=e)};function r(e,i=()=>!0){return L(this,void 0,void 0,function*(){yield new Promise((n,c)=>{const p=[];for(const d of y(o)){const f=o[d];for(const l of f)l.path&&p.push(l.internalValidate(null,i))}Promise.all(p).then(d=>{if(d.some(f=>!f.valid)){const f=d.filter(l=>l.errors).map(l=>l.errors);e&&e(f),c(f)}else e&&e(),n()})})})}function a(){for(const e of y(o)){const i=o[e];for(const n of i)n.restoreValidation()}}return b(P,{props:t,maxChildLabelWidthRef:s,deriveMaxChildLabelWidth:u}),b(C,{formItems:o}),Object.assign({validate:r,restoreValidation:a},{mergedClsPrefix:m})},render(){const{mergedClsPrefix:t}=this;return O("form",{class:[`${t}-form`,this.inline&&`${t}-form--inline`],onSubmit:this.onSubmit},this.$slots)}});export{V as _,C as a,P as f};
